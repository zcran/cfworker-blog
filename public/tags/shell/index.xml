<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on Paperubit的博客</title>
    <link>http://example.org/tags/shell/</link>
    <description>Recent content in Shell on Paperubit的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 19 Dec 2023 15:22:29 +0800</lastBuildDate><atom:link href="http://example.org/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode Shell1</title>
      <link>http://example.org/posts/leetcode-shell1/</link>
      <pubDate>Tue, 19 Dec 2023 15:22:29 +0800</pubDate>
      
      <guid>http://example.org/posts/leetcode-shell1/</guid>
      <description>第十行 给定一个文本文件 file.txt，请只打印这个文件中的第十行。
sed -n &amp;#39;10p&amp;#39; file.txt </description>
    </item>
    
    <item>
      <title>Leetcode Shell2</title>
      <link>http://example.org/posts/leetcode-shell2/</link>
      <pubDate>Tue, 19 Dec 2023 15:22:29 +0800</pubDate>
      
      <guid>http://example.org/posts/leetcode-shell2/</guid>
      <description>统计词频 写一个 bash 脚本以统计一个文本文件 words.txt 中每个单词出现的频率。
为了简单起见，你可以假设：
words.txt只包括小写字母和 &amp;rsquo; &amp;rsquo; 。 每个单词只由小写字母组成。 单词间由一个或多个空格字符分隔。 示例:
假设 words.txt 内容如下：
the day is sunny the the the sunny is is 你的脚本应当输出（以词频降序排列）：
the 4 is 3 sunny 2 day 1 说明:
不要担心词频相同的单词的排序问题，每个单词出现的频率都是唯一的。 你可以使用一行 Unix pipes 实现吗？
cat words.txt | tr -s &amp;#39; &amp;#39; &amp;#39;\n&amp;#39;|sort|uniq -c |sort -r|awk &amp;#39;{print $2&amp;#34; &amp;#34;$1}&amp;#39; cat ——浏览文件 tr -s ——替换字符串（空格换为换行）保证了一行一个单词 sort ——默认ASCII值排序，排序号后还会有重复 uniq —— 去重，-c再输出重复次数。结果就是 ”4 abc“ abc出现了4次 sort -r —— 反向排序，也就是从大到小。得到按频率高低的结果 awk ——格式化输出，规定输出是先字符串再重复次数，所以先$2再$1，中间空格分隔 </description>
    </item>
    
    <item>
      <title>Leetcode Shell3</title>
      <link>http://example.org/posts/leetcode-shell3/</link>
      <pubDate>Tue, 19 Dec 2023 15:22:29 +0800</pubDate>
      
      <guid>http://example.org/posts/leetcode-shell3/</guid>
      <description>有效电话号码 给定一个包含电话号码列表（一行一个电话号码）的文本文件 file.txt，写一个单行 bash 脚本输出所有有效的电话号码。
你可以假设一个有效的电话号码必须满足以下两种格式： (xxx) xxx-xxxx 或 xxx-xxx-xxxx。（x 表示一个数字）
你也可以假设每行前后没有多余的空格字符。
// 三种方法 grep -P &amp;#39;^(\d{3}-|\(\d{3}\) )\d{3}-\d{4}$&amp;#39; file.txt sed -n -r &amp;#39;/^([0-9]{3}-|\([0-9]{3}\) )[0-9]{3}-[0-9]{4}$/p&amp;#39; file.txt awk &amp;#39;/^([0-9]{3}-|\([0-9]{3}\) )[0-9]{3}-([0-9]{4})$/&amp;#39; file.txt </description>
    </item>
    
    <item>
      <title>Leetcode Shell4</title>
      <link>http://example.org/posts/leetcode-shell4/</link>
      <pubDate>Tue, 19 Dec 2023 15:22:29 +0800</pubDate>
      
      <guid>http://example.org/posts/leetcode-shell4/</guid>
      <description>转置文件 给定一个文件 file.txt，转置它的内容。
你可以假设每行列数相同，并且每个字段由 &amp;rsquo; &amp;rsquo; 分隔。
# Read from the file file.txt and print its transposed content to stdout. awk &amp;#39;{ #这个大括号里的代码是 对正文的处理 # NF表示列数，NR表示已读的行数 # 注意for中的i从1开始，i前没有类型 for (i=1; i&amp;lt;=NF; i++){#对每一列 if(NR==1){ #如果是第一行 #将第i列的值存入res[i],$i表示第i列的值，i为数组的下标，以列序号为下标， #数组不用定义可以直接使用 res[i]=$i; } else{ #不是第一行时，将该行对应i列的值拼接到res[i] res[i]=res[i] &amp;#34; &amp;#34; $i } } } # BEGIN{} 文件进行扫描前要执行的操作；END{} 文件扫描结束后要执行的操作。 END{ #输出数组 for (i=1; i&amp;lt;=NF; i++){ print res[i] } }&amp;#39; file.txt </description>
    </item>
    
  </channel>
</rss>
